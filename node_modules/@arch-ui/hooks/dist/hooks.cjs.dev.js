'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _slicedToArray = _interopDefault(require("@babel/runtime/helpers/slicedToArray"));

var ResizeObserver = _interopDefault(require('resize-observer-polyfill'));

var react = require('react');

function useMeasure(ref) {
  let _useState = react.useState(() => ({
    height: 0,
    width: 0
  })),
      _useState2 = _slicedToArray(_useState, 2),
      snapshot = _useState2[0],
      setSnapshot = _useState2[1];

  react.useLayoutEffect(() => {
    let element = ref.current;

    if (element !== null) {
      let resizeObserver = new ResizeObserver(_ref => {
        let _ref2 = _slicedToArray(_ref, 1),
            entry = _ref2[0];

        const height = entry.target.offsetHeight;
        const width = entry.target.offsetWidth;

        if (width !== snapshot.width || height !== snapshot.height) {
          setSnapshot({
            width,
            height
          });
        }
      });
      resizeObserver.observe(element);
      return () => {
        resizeObserver.unobserve(element);
      };
    }
  });
  return snapshot;
}

exports.useMeasure = useMeasure;
