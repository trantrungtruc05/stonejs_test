import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import { jsx } from '@emotion/core';
import { getYear } from 'date-fns';
import { Component } from 'react';
import { FieldContainer, FieldLabel, FieldInput } from '@arch-ui/fields';
import { TextDayPicker } from '@arch-ui/day-picker';

class CalendarDayField extends Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleSelectedChange", value => {
      const {
        field,
        onChange
      } = this.props;

      if (value === null || getYear(value).toString().length <= 4 && getYear(value) <= field.config.yearRangeTo && getYear(value) >= field.config.yearRangeFrom) {
        onChange(value);
      }
    });
  }

  render() {
    const {
      autoFocus,
      field,
      value,
      errors
    } = this.props;
    const htmlID = "ks-input-".concat(field.path);
    return jsx(FieldContainer, null, jsx(FieldLabel, {
      htmlFor: htmlID,
      field: field,
      errors: errors
    }), jsx(FieldInput, null, jsx(TextDayPicker, {
      id: "ks-daypicker-".concat(field.path),
      autoFocus: autoFocus,
      date: value,
      onChange: this.handleSelectedChange
    })));
  }

}

export default CalendarDayField;
